@using MudBlazor
@using ReciveGiverApp.Models.Models

@inject HttpClient Http

<MudSelect @bind-Value="selectedIngredient" Label="Wybierz składnik">
    @foreach (var margin in Enum.GetValues(typeof(Margin)).Cast<Margin>())
    {
        <MudSelectItem Value="margin">@margin</MudSelectItem>
    }
</MudSelect>

@code
{
    Ingredient selectedIngredient = new Ingredient();

    List<Ingredient> ingredients = new List<Ingredient>();

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    // private async Task<List<Ingredient>> GetIngredientsAsync()
    // {
    //     List<Ingredient> newRecipes;
    //     try
    //     {
    //         var response = await Http.GetAsync("/RecipeIngredient/GetRecipesWithIngredients");

    //         if (response.IsSuccessStatusCode)
    //         {
    //             newRecipes = await response.Content.ReadFromJsonAsync<List<Recipe>>();
    //             return newRecipes ?? new List<Recipe>();
    //         }
    //         else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
    //         {
    //             Console.WriteLine("Recipes not found");
    //             return new List<Recipe>();
    //         }
    //         else
    //         {
    //             Console.WriteLine("An error occurred while fetching the recipes");
    //             return new List<Recipe>();
    //         }
    //     }
    //     catch (Exception ex)
    //     {
    //         // Handle any exceptions that occur during the request
    //         Console.WriteLine($"An error occurred: {ex.Message}");
    //         return new List<Recipe>();
    //     }
    // }

}